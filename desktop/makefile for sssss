# Makefile for building Ubuntu MikaOS ISO with dynamic app fetching

# Output and file paths
ISO_NAME := output/mikaos.iso
ROOT_FS := build/filesystem
FILES_DIR := files
OUTPUT_DIR := output
GRUB_CFG := build/grub_config/grub.cfg
CHROMEOS_FLEX_DIR := chromeos-flex
Bui := build/filesystem/boot/grub/
CONFIG_FILE := iso_config.txt

# Tools
MKISOFS := genisoimage
MKDIR := mkdir -p
CP := cp
RM := rm -rf

# Default target
all: run_setup buildfl get-deps fetch-files prepare_dirs build_iso

# Step 1: Run the Python setup script
run_setup:
	@echo "Running the setup script to generate iso_config.txt..."
	python3 app.py
	@echo "Setup script completed. Proceeding with ISO build..."

# Step 2: Create necessary folders
buildfl:
	@echo "Creating required folders..."
	$(MKDIR) $(FILES_DIR)
	$(MKDIR) $(ROOT_FS)/boot/grub
	$(MKDIR) $(ROOT_FS)/usr/local/bin
	$(MKDIR) $(OUTPUT_DIR)
	@echo "All folders created successfully!"

# Step 3: Install dependencies from requirements.txt
get-deps:
	@echo "Installing dependencies from requirements.txt..."
	@xargs -a requirements.txt sudo apt install -y
	@echo "Configuring Bluetooth and Wi-Fi..."
	sudo services bluetooth start

# Step 4: Fetch required files dynamically based on iso_config.txt
fetch-files:
	@echo "Fetching required files based on iso_config.txt..."
	@cat $(CONFIG_FILE) | grep "Apps:" | cut -d':' -f2 | tr ',' '\n' | while read app; do \
		echo "Installing $$app..."; \
	sudo apt install -y $$app || echo "Failed to install $$app. Continuing."; \
    	done
		@echo "Downloading kernel archive..."
		wget -O $(FILES_DIR)/kernel_cache.zip https://github.com/Minecatl1/linux_binary_cache/archive/refs/tags/1.0.zip
		@echo "Unzipping kernel archive..."
		unzip -o $(FILES_DIR)/kernel_cache.zip -d $(FILES_DIR)
		@echo "Moving vmlinuz-5.15.0-105 to the correct location..."
		$(MKDIR) $(ROOT_FS)/boot
	mv $(FILES_DIR)/linux_binary_cache-1.0/vmlinuz-5.15.0-105 $(ROOT_FS)/boot/vmlinuz-linux
		@echo "Downloading stage2_eltorito..."
		wget -O $(Bui)/stage2_eltorito https://github.com/littleosbook/littleosbook/raw/refs/heads/master/files/stage2_eltorito

# Step 5: Prepare filesystem and directories
prepare_dirs:
	@echo "Preparing filesystem..."
	$(CP) $(GRUB_CFG) $(ROOT_FS)/boot/grub/
	@echo "Filesystem preparation completed."

# Step 6: Build the ISO
build_iso:
	@echo "Building Ubuntu MikaOS ISO..."
	$(MKISOFS) -o $(ISO_NAME) \
		-b boot/grub/stage2_eltorito -no-emul-boot -boot-load-size 4 -boot-info-table \
	$(ROOT_FS)
	@echo "Ubuntu MikaOS ISO created successfully: $(ISO_NAME)"

# Step 7: Clean output directory and fetched files
clean:
	@echo "Cleaning output directory and fetched files..."
	$(RM) $(OUTPUT_DIR)
	$(RM) $(FILES_DIR)

# Help
help:
	@echo "Makefile targets:"
	@echo "  all         - Run setup script, create folders, install dependencies, fetch files, prepare filesystem, and build ISO"
	@echo "  run_setup   - Run the Python setup script"
	@echo "  buildfl     - Create all necessary folders"
	@echo "  get-deps    - Install dependencies from requirements.txt"
	@echo "  fetch-files - Fetch apps, kernel, and initramfs as defined in iso_config.txt"
	@echo "  prepare_dirs- Prepare filesystem and directories"
	@echo "  build_iso   - Build Ubuntu MikaOS ISO"
	@echo "  clean       - Clean output files and fetched files"
	@echo "  help        - Display this help message"

.PHONY: all run_setup buildfl get-deps fetch-files prepare_dirs build_iso clean help
